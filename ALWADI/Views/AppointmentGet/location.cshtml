
@model IEnumerable<ALWADI.Models.AppointmentGet>

<style>
    tbody {
        font-family: 'Arabic Typesetting';
        font-size: x-large;
    }

    thead {
        white-space: nowrap;
        color: red;
        font-family: 'Arabic Typesetting';
        font-size: x-large;
    }
</style>

@using (Html.BeginForm("locationSearch", "AppointmentGet"))
{

    <div class="row">
            <div class="col-md-6" id="input-graph-search">
                <div class="input-group ">
                    <div class="col-5">

                        <label class="control-label">@Html.DisplayNameFor(model => model.location)</label>

                        <select class="form-control" asp-items="ViewBag.location" name="keywords"></select>
                        <span class="text-danger"></span>



                    </div>
                   

                    <div class="form-group  " style="padding-top=30px;">
                        <div class="col-5">
                            <span class="input-group-btn ">
                                <button class="btn btn-info btn-lg justify-content-center " type="submit">
                                    search
                                    <i class="fas fa-search"></i>

                                </button>
                            </span>
                        </div>
                    </div>
                </div>



            </div>

        </div>

}


<div class="card-header">
    <div class="row">
        <div class="col col-md-6">Sample Data</div>
        <div class="col col-md-6 text-right">
            <button type="button" id="export_button" class="btn btn-success btn-sm">Export</button>
        </div>
    </div>
</div>

<div class="card-body">
    <div class="table-responsive">



        <table class="table table-striped" id="dep_table">
            <thead>
                <tr>
                    <th style="text-align: center;">
                        @Html.DisplayNameFor(model => model.DoctorName)

                    </th>

                    <th style="text-align: center;">
                        @Html.DisplayNameFor(model => model.DepartmentName)

                    </th>
                    <th style="text-align: center;">
                        @Html.DisplayNameFor(model => model.location)
                    </th>




            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="text-align: center;">
                            @item.DoctorName

                        </td>
                        <td style="text-align: center;">
                            @item.DepartmentName
                        </td>
                        <td style="text-align: center;">
                            @item.location
                        </td>


                    </tr>
                }
            </tbody>
        </table>


    </div>
</div>
@section Scripts {
    <script>
        $(function () {
            $('#dep_table').DataTable({

                "lengthMenu": [[5, 10, 15, 20, 25, -1], [5, 10, 15, 20, 25, "All"]],
                "responsive": true,
                "autoWidth": true,
                "filter": false,

                "language": {
                    "sProcessing": "جارٍ التحميل...",
                    "sLengthMenu": "أظهر _MENU_ مدخلات",
                    "sZeroRecords": "لم يتم العثور على أية نتائج",
                    "sInfo": "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                    "sInfoEmpty": "يعرض 0 إلى 0 من أصل 0 سجل",
                    "sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
                    "sInfoPostFix": "",
                    /*"sSearch": "البحث:",*/
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "الأول",
                        "sPrevious": "السابق",
                        "sNext": "التالي",
                        "sLast": "الأخير"
                    }
                }
            });
        });



        function html_table_to_excel(type) {
            var data = document.getElementById('dep_table');

            var file = XLSX.utils.table_to_book(data, { sheet: "sheet1" });

            XLSX.write(file, { bookType: type, bookSST: true, type: 'base64' });

            XLSX.writeFile(file, 'file.' + type);
        }

        const export_button = document.getElementById('export_button');

        export_button.addEventListener('click', () => {
            html_table_to_excel('xlsx');
        });


    </script>

}


